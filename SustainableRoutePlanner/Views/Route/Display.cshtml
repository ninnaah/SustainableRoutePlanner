@model SustainableRoutePlanner.Models.Route

@{
    ViewData["Title"] = "Display";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    * {
        box-sizing: border-box;
    }

    /* Create three equal columns that floats next to each other */
    .column {
        float: left;
        width: 40%;
        padding: 1em;
        height: 100%;
    }

    .columnOne {
        float: left;
        width: 30%;
        padding: 1em;
        height: 100%;
    }

    .twoColumns {
        float: left;
        width: 50%;
        padding: 1em;
        height: 100%;
    }

    /* Clear floats after the columns */
    .row:after {
        content: "";
        display: table;
        clear: both;
    }

    .row {
        padding-top: 2em;
        padding: 1em;
        margin-top: 3em;
        border-style: solid;
        border-color: #ced4da;
        border-width: thin;
    }



    .rowManeuver:after {
        content: "";
        display: table;
        clear: both;
    }

    .rowManeuver {
        padding-top: 0.5em;
    }

    .columnManueverOne {
        float: left;
        width: 15%;
        padding: 0.5em;
        height: 100%;
        align-content: center;
    }

    .columnManueverTwo {
        float: left;
        width: 85%;
        padding: 0.5em;
        height: 100%;
    }



    .maneuver {
        overflow-y: scroll;
        height: 300px;
    }

    h1, h2, h3 {
        padding-top: 2em;
    }

    h5, h6{
        padding-top: 0.5em;
    }

    .map {
        max-width: 100%;
        max-height: 100%;
    }

    .routeHeader {
        padding: 1em;
    }

    .minDiv{
        padding-left: 1em;
    }

</style>


<div class="routeHeader">

    <h1>Routen</h1>

    <h5>Start: @Model.DepartureAdress</h5>
    <h5>Ziel: @Model.ArrivalAdress</h5>

    @if (@Model.DepartureTime != null)
    {
        <h5>Abfahrt: @Model.DepartureTime?.ToString("dd.MM.yyyy HH:mm")</h5>
    }

    @if (@Model.ArrivalTime != null)
    {
        <h5>Ankunft: @Model.ArrivalTime?.ToString("dd.MM.yyyy HH:mm")</h5>
    }

</div>



<div class="row">
    <h2>Öffentliche Verkehrsmittel</h2>
    <div class="twoColumns">

        <div>Abfahrt: @Model.PublicTransportRoute.DepartureTime?.ToString("dd.MM.yyyy HH:mm")</div>
        <div>Ankunft: @Model.PublicTransportRoute.ArrivalTime?.ToString("dd.MM.yyyy HH:mm")</div>
        <div>Dauer: @TimeSpan.FromMinutes(@Model.PublicTransportRoute.Duration) min</div>
        <div>Distanz: @string.Format("{0:0.00}", @Model.PublicTransportRoute.Distance) km</div>

        <h3>Emissionen</h3>
        <h5>CO2 Äquivalente: @string.Format("{0:0.00}", @Model.PublicTransportRoute.RouteEmissions.CO2Equivalent) g</h5>
        <h5>CO2: @string.Format("{0:0.00}", @Model.PublicTransportRoute.RouteEmissions.CO2) g</h5>
        <h5>NOX: @string.Format("{0:0.00}", @Model.PublicTransportRoute.RouteEmissions.NOX) g</h5>
        <h5>PM10: @string.Format("{0:0.00}", @Model.PublicTransportRoute.RouteEmissions.PM10) g</h5>

    </div>
    <div class="twoColumns">

        <h4>Wegbeschreibung</h4>
        <div class="maneuver">
            @foreach (var maneuver in Model.PublicTransportRoute.Maneuvers)
            {
                <h5>@maneuver.TransportName</h5>
                <div class="minDiv">@maneuver.Duration min</div>

                @if (maneuver.Stops.Count() > 0)
                {
                    <h6>Stationen</h6>
                    <ul>
                        @foreach (string stop in maneuver.Stops)
                        {
                            <li>@stop</li>
                        }
                    </ul>
                }

            }
        </div>

    </div>
</div>



<div class="row">
    <h2>Auto</h2>
    <h4>@Model.CarRoute.TransportType</h4>
    <div class="columnOne">

        <div>Abfahrt: @Model.CarRoute.DepartureTime?.ToString("dd.MM.yyyy HH:mm")</div>
        <div>Ankunft: @Model.CarRoute.ArrivalTime?.ToString("dd.MM.yyyy HH:mm")</div>
        <div>Dauer: @TimeSpan.FromMinutes(@Model.CarRoute.Duration) min</div>
        <div>Distanz: @string.Format("{0:0.00}", @Model.CarRoute.Distance) km</div>

        <h3>Emissionen</h3>
        <h5>CO2 Äquivalente: @string.Format("{0:0.00}", @Model.CarRoute.RouteEmissions.CO2Equivalent) g</h5>
        <h5>CO2: @string.Format("{0:0.00}", @Model.CarRoute.RouteEmissions.CO2) g</h5>
        <h5>NOX: @string.Format("{0:0.00}", @Model.CarRoute.RouteEmissions.NOX) g</h5>
        <h5>PM10: @string.Format("{0:0.00}", @Model.CarRoute.RouteEmissions.PM10) g</h5>

    </div>

    <div class="columnOne">

        <h4>Wegbeschreibung</h4>
        <div class="maneuver">
            @foreach (var maneuver in Model.CarRoute.Maneuvers)
            {
                <div class="rowManeuver">
                    <img class="columnManueverOne" src="@maneuver.Image"/>
                    <div class="columnManueverTwo">@maneuver.Text</div>
                </div>
            }
        </div>

    </div>

    <div class="column">
        <img class="map" src="~/Maps/@(Model.CarRoute.Id).png" alt="Car route map" />
    </div>

</div>



<div class="row">
    <h2>@Model.BicycleRoute.TransportType</h2>
    <div class="columnOne">

        <div>Abfahrt: @Model.BicycleRoute.DepartureTime?.ToString("dd.MM.yyyy HH:mm")</div>
        <div>Ankunft: @Model.BicycleRoute.ArrivalTime?.ToString("dd.MM.yyyy HH:mm")</div>
        <div>Dauer: @TimeSpan.FromMinutes(@Model.BicycleRoute.Duration) min</div>
        <div>Distanz: @string.Format("{0:0.00}", @Model.BicycleRoute.Distance) km</div>

        <h3>Emissionen</h3>
        <h5>CO2 Äquivalente: @string.Format("{0:0.00}", @Model.BicycleRoute.RouteEmissions.CO2Equivalent) g</h5>
        <h5>CO2: @string.Format("{0:0.00}", @Model.BicycleRoute.RouteEmissions.CO2) g</h5>
        <h5>NOX: @string.Format("{0:0.00}", @Model.BicycleRoute.RouteEmissions.NOX) g</h5>
        <h5>PM10: @string.Format("{0:0.00}", @Model.BicycleRoute.RouteEmissions.PM10) g</h5>

    </div>

    <div class="columnOne">

        <h4>Wegbeschreibung</h4>
        <div class="maneuver">
            @foreach (var maneuver in Model.BicycleRoute.Maneuvers)
            {
                <div class="rowManeuver">
                    <img class="columnManueverOne" src="@maneuver.Image" />
                    <div class="columnManueverTwo">@maneuver.Text</div>
                </div>
            }
        </div>

    </div>

    <div class="column">
        <img class="map" src="~/Maps/@(Model.BicycleRoute.Id).png" alt="Bicycle route map" />
    </div>

</div>